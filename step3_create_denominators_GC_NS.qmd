---
title: "Disease Template"
format: html
editor: source
---

```{r}
library(tidyverse)
library(arrow)
library(dtplyr)

source('functions/DT_base.R')

```

```{r}
#denominator base files -------------------
animals<-read_parquet('data/intermediate_files/animals.parquet') #each row is an animal

animal_lactations<-read_parquet('data/intermediate_files/animal_lactations.parquet') #each row is an animal lactation

#numerator base files long ----------------------each row is a unique disease event (gapx_key)
disease_animal_long<-read_parquet('data/intermediate_files/disease_animal_level_long.parquet')

disease_lact_long<-read_parquet('data/intermediate_files/disease_lactation_level_long.parquet')

#numerator base files long ---------each row is a an animal or animal lact with diseases in wide format
disease_animal_wide<-read_parquet('data/intermediate_files/disease_animal_level_wide.parquet')

disease_lact_wide<-read_parquet('data/intermediate_files/disease_lactation_level_wide.parquet')

#---------------------------
data_pull_min<-min(animals$data_pull_date_min)
data_pull_max<-max(animals$data_pull_date_max)
```


# Gerard's Attempt

```{r}

date_start <- ymd("2024-01-01")
date_end <- ymd("2024-12-31")

# to get cows with dates in window
test <- animal_lactations |>
  mutate(year = mdy(date_fresh)) |> #make this the year of the fresh date?, otherwise it is an arbitrary force of a year
  filter(lact_number>0) |> 
  filter(date_archive_max <= date_end) |> 
  # fitlers cows fresh before start date
  filter(date_fresh<= date_start & date_archive_max >= date_start |
           date_fresh<= date_start & is.na(date_archive_max) |
  # filters cows fresh after start date
    date_fresh >= date_start & date_archive_max <= date_end|
           date_fresh >= date_start & is.na(date_archive_max)
         )

# summarize total
test_deno_total <- test |> 
  group_by(year, id_animal) |> 
  # get rid of dup as only interested in total cows
  slice_tail() |> 
  ungroup() |> 
  group_by(year) |> 
  summarise(cows_total = n()) |> 
  mutate(lact_group = "Total")
  
# by lact this won't equal totals due to multiple lact within year
test_deno_total_lact <- test |> 
  group_by(year, lact_group) |> 
  summarise(cows_total = n()) |> 
  ungroup()
         
test_sum <- bind_rows(test_deno_total, test_deno_total_lact) 

# to get months

test_month <- test |> 
  select(id_animal, id_animal_lact, date_archive_max, lact_group) |> 
  mutate(January = 1,
         February = case_when(is.na(date_archive_max) ~ 1,
                             date_archive_max <= "2024-01-31" ~ 0,
                             .default = 1),
         March = case_when(is.na(date_archive_max) ~ 1,
                             date_archive_max <= "2024-02-28" ~ 0,
                             .default = 1)
  ) 


# summarize
test_summary_month <- test_month |> 
  summarise(across(January:March, ~ sum(. == 1, na.rm = TRUE))) |> 
  pivot_longer(cols = everything(),
               names_to = "Month",
               values_to = "Count")

test_summary_month_lact <- test_month |> 
  group_by(lact_group) |> 
  summarise(across(January:March, ~ sum(. == 1, na.rm = TRUE))) |> 
  ungroup() |> 
  pivot_longer(cols = -(lact_group),
               names_to = "Month",
               values_to = "Count")


```


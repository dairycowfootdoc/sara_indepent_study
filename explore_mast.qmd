---
title: "explore_mast"
editor: source
format: 
 html:
   embed-resources: true
   toc: true
   toc-location: left
execute:
    echo: false
    message: false
    warning: false
---

```{r}
library(tidyverse)
library(arrow)
library(dtplyr)
library(DT)

source('functions/DT_base.R') #functions to parse remarks and protocols

events_formatted<-read_parquet('data/intermediate_files/events_formatted.parquet') |> 
  filter(event %in% c("MAST", "CULTURE"))%>%
  filter(date_event > "2024-01-01")

summarize_events<-events_formatted |> 
  group_by(event, protocols_remaining_after_numbers1) |> 
  summarize(count_rows=sum(n()))|>
  ungroup()%>%
  mutate(event_type = factor(protocols_remaining_after_numbers1), 
         Event = factor(event))
```

# Summary Graph

The most commonly used protocols to treat mastitis are SpectraMastLC, Today, and AHV. The most common culture result is *staph. Aureus*.

```{r}
#| fig-height: 8
# count y vars

facet_order <- summarize_events %>%
  group_by(event_type) %>%
  summarise(n_y = n_distinct(event)) %>%
  arrange(desc(n_y)) %>%  # Order by most y categories
  pull(event_type)

# order events
summarize_events <- summarize_events %>%
  mutate(event_type = fct_reorder(event_type, count_rows, .fun = sum, .desc = FALSE)) 

  ggplot(summarize_events)+
  geom_bar(aes(x = event_type,
               y = count_rows, fill = event_type), stat = "identity")+
  #facet_wrap(factor(event, levels = facet_order) ~., scales = 'free')+
    facet_wrap(vars(event), ncol = 1, scales = "free")+
  coord_flip()+
  scale_fill_viridis_d()+
  theme_minimal()+
  labs(x = "",
       y = "Row Count")+
  theme(legend.position = "none",
        # axis.text.y = element_text(size = 6)
        )
```

# Mastitis Events by Treatment Protocol

Percentage of mastitis events that were treated by each protocol.

```{r}
library(ggplot2)
library(dplyr)
library(forcats)

# Filter for only Mastitis events within the last year
mastitis_events <- summarize_events %>%
  filter(event == "MAST")

# Compute the total count of all mastitis events (single scalar value)
total_mastitis <- sum(mastitis_events$count_rows)

# Compute percentage relative to total mastitis events
mastitis_events <- mastitis_events %>%
  mutate(percent = (count_rows / total_mastitis) * 100)  # Compute percentage

# Reorder event_type factor based on sum of count_rows
mastitis_events <- mastitis_events %>%
  mutate(event_type = fct_reorder(event_type, count_rows, .fun = sum, .desc = FALSE))

# Plot with percentages
ggplot(mastitis_events) +
  geom_bar(aes(x = event_type, y = percent, fill = event_type), stat = "identity") +
  coord_flip() +
  scale_fill_viridis_d() +
  theme_minimal() +
  labs(
    x = "",
    y = "Percentage of Total Mastitis Events (%)",
    title = "Distribution of Mastitis Events by Protocol"
  ) +
  theme(
    legend.position = "none"
  )
```

# Mastitis by DIM

```{r}
library(ggplot2)
library(dplyr)

mast_dim <- events_formatted %>% 
  filter(event == "MAST") %>% 
  #filter(date_event > "2024-01-01")
  select(id_animal, event, dim_event, lact_group, protocols_remaining_after_letters1)  

graph <- ggplot(mast_dim, aes(x = dim_event)) +
  geom_histogram(binwidth = 10, fill = "steelblue", color = "black", alpha = 0.7) +
  theme_minimal(base_size = 14) +
  facet_wrap(vars(event), ncol = 1, scales = "free") +
  labs(
    title = "Distribution of Mastitis Events Over Days in Milk",
    x = "Days in Milk",
    y = "Count"
  ) +
  theme(
    panel.grid.major = element_line(color = "gray80"),
    panel.grid.minor = element_blank(),
    strip.text = element_text(size = 14, face = "bold")
  )

print(graph)
```

# Treatment Success

Cows that were initially treated with SpectraMastLC were retreated for mastitis within 14 - 21 days at a rate of 5.6%. Cows that were initially treated with AHV were retreated within 14 - 21 days at a rate of 4.5%.

This was created with the idea that with a gap of 14, animals that were retreated within 14 days are being misidentified as they have not completed their treatment interval.

```{r}
library(ggplot2)
library(dplyr)
library(stringr)

# Ensure date_event is in Date format
events_formatted <- events_formatted %>%
  mutate(date_event = as.Date(date_event))  # Convert if not already Date type

#Pull the wanted information into a new data set, only pull MAST events that used AHV or Spec
treatment_data <- events_formatted %>%
  filter(event %in% c("MAST", "CULTURE"), (str_starts(protocols_remaining_after_numbers1, "AHVmast") |
         str_starts(protocols_remaining_after_numbers1, "Spec"))) # Only relevant treatments
  

# Identify treatment periods where a new first event starts after 60 days
treatment_data <- treatment_data %>%
  arrange(id_animal, date_event) %>%  # Sort by animal and date
  group_by(id_animal) %>%
  mutate(
    prev_event_date = lag(date_event),
    days_since_last_event = as.numeric(date_event - prev_event_date),
    new_treatment_period = ifelse(is.na(days_since_last_event) | days_since_last_event > 60, 1, 0), 
    treatment_period = cumsum(new_treatment_period)  # Assign period ID
  ) %>%
  ungroup()

# Identify first treatment in each treatment period
treatment_data <- treatment_data %>%
  group_by(id_animal, treatment_period) %>%
  mutate(
    first_treatment = first(protocols_remaining_after_numbers1),  
    first_treatment_date = first(date_event)
  ) %>%
  ungroup()

# Identify retreatments within 14-21 days of the first treatment in the same treatment period
treatment_data <- treatment_data %>%
  arrange(id_animal, date_event) %>%
  group_by(id_animal, treatment_period) %>%
  mutate(
    prev_protocol = lag(protocols_remaining_after_numbers1),
    days_since_first_treatment = as.numeric(date_event - first_treatment_date),
    is_retreatment = ifelse(
      between(days_since_first_treatment, 14, 21) & prev_protocol == first_treatment, 
      TRUE, 
      FALSE
    )
  ) %>%
  ungroup()

# Create dataset with only valid retreatments
retreatment_data <- treatment_data %>%
  filter(is_retreatment == TRUE)

# Count retreatments by first treatment protocol
retreatment_counts <- retreatment_data %>%
  count(first_treatment, name = "retreatment_events") %>%
  rename(protocol = first_treatment)

# Count total first-time treatments
total_events <- treatment_data %>%
  filter(protocols_remaining_after_numbers1 == first_treatment) %>%
  count(first_treatment, name = "total_events") %>%
  rename(protocol = first_treatment)

# Merge total events with retreatments
retreatment_summary <- left_join(retreatment_counts, total_events, by = "protocol") %>%
  mutate(retreatment_percentage = (retreatment_events / total_events) * 100)

# Plot retreatment percentage per protocol
ggplot(retreatment_summary, aes(x = protocol, 
                                y = retreatment_percentage, 
                                fill = protocol)) +
  geom_bar(stat = "identity", width = 0.5, color = "black") +
  geom_text(aes(label = paste0(round(retreatment_percentage, 1), "%")),  
            vjust = -0.5, size = 3, fontface = "bold") +  
  scale_fill_manual(values = c("AHVmastitis" = "purple", "SpectraMastLC" = "pink")) +
  theme_minimal() +
  labs(
    title = "Retreatments as % of Total First Treatments by Protocol",
    x = "Treatment Protocol",
    y = "Retreatment Percentage (%)",
    fill = "Protocol"
  ) +
  theme(
    text = element_text(size = 12),
    legend.position = "top"
  )


```

# Treatment Success by Lactation Group

```{r}
library(dplyr)
library(ggplot2)
library(tidyr)  # Needed for replace_na()

# Count total treatments by lactation group
total_treatments_lact <- treatment_data %>%
  count(lact_group, name = "total_events")

# Count retreatments by lactation group within 14 days
retreatments_lact <- treatment_data %>%
  filter(retreated_within_14_days == TRUE) %>%
  count(lact_group, name = "retreatment_events")

# Merge datasets & calculate retreatment percentage
retreatment_rates <- left_join(retreatments_lact, total_treatments_lact, by = "lact_group") %>%
  mutate(
    retreatment_events = replace_na(retreatment_events, 0),  # Handle missing values
    retreatment_percentage_lact = (retreatment_events / total_events) * 100
  )

# Plot retreatment rates by lactation group
ggplot(retreatment_rates, aes(x = factor(lact_group),  
                              y = retreatment_percentage_lact, 
                              fill = factor(lact_group))) +
  geom_bar(stat = "identity", position = "dodge", width = 0.6, color = "black") +  
  geom_text(aes(label = paste0(round(retreatment_percentage_lact, 1), "%")), 
            position = position_dodge(0.6), vjust = -0.5, size = 3, fontface = "bold") +  
  scale_fill_manual(values = c("LACT 1" = "yellow", "LACT 2" = "green", "LACT 3+" = "cyan")) +  
  theme_minimal() +
  labs(
    title = "Retreatment Rates by Lactation Group",
    x = "Lactation Group",
    y = "Retreatment Percentage (%)",
    fill = "Lactation Group"
  ) +
  theme(
    text = element_text(size = 12),
    legend.position = "top"
  )

```

# Treatment Success by Lactation Group and Protocol

```{r}
library(dplyr)
library(ggplot2)

# Count total treatments by protocol & lactation group
total_treatments <- treatment_data %>%
  count(protocols_remaining_after_numbers1, lact_group, name = "total_events")

# Count retreatments by protocol & lactation group (within 14 days)
retreatments <- treatment_data %>%
  filter(retreated_within_14_days == TRUE) %>%
  count(protocols_remaining_after_numbers1, lact_group, name = "retreatment_events")

# Merge datasets & calculate retreatment percentage
retreatment_rates <- left_join(retreatments, total_treatments, 
                               by = c("protocols_remaining_after_numbers1", "lact_group")) %>%
  mutate(retreatment_percentage = (retreatment_events / total_events) * 100)

ggplot(retreatment_rates, aes(x = factor(lact_group),  # Lactation group as categorical
                              y = retreatment_percentage, 
                              fill = protocols_remaining_after_numbers1)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.6, color = "black") +  
  geom_text(aes(label = paste0(round(retreatment_percentage, 1), "%")), 
            position = position_dodge(0.6), vjust = -0.5, size = 3, fontface = "bold") +  
  scale_fill_manual(values = c("AHVmastitis" = "steelblue", "SpectraMastLC" = "forestgreen")) +  
  theme_minimal() +
  labs(
    title = "Retreatment Rates by Lactation Group & Protocol",
    x = "Lactation Group",
    y = "Retreatment Percentage (%)",
    fill = "Treatment Protocol"
  ) +
  theme(
    text = element_text(size = 14),
    legend.position = "top"
  )


```

# 

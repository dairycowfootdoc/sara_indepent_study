---
title: "Explore Event Details"
format: html
editor: source
execute:
  echo: false
  message: false
  warning: false
  embed-resources: true
---

```{r}
library(tidyverse)
library(arrow)
library(DT)

source('functions/DT_base.R') #interactive table function
```

```{r}

event_details<-read_parquet('data/template_files/template_event_details.parquet')%>%
  mutate(event_type=factor(event_type), 
         Event = factor(Event))%>%
  mutate(Remark2 = Remark, 
         Remark3 = Remark,
         Protocols2 = Protocols, 
         Protocols3 = Protocols)%>%

# Extract numbers and letters into separate columns
  mutate(
    # Extract the first group of numbers and letters
    remark_numbers1 = str_extract(Remark, "[0-9]+"),
    remark_letters1 = str_extract(Remark, "[A-Za-z]+"),
    
    # Remove the first set of numbers or letters to check for the second set
    remark_remaining_after_numbers1 = str_remove(Remark, "([0-9]+)"),
    remark_remaining_after_letters1 = str_remove(Remark, "([A-Za-z]+)"),
    
    # Extract the second set of numbers or letters
    remark_numbers2 = if_else(str_detect(remark_remaining_after_numbers1, "[A-Za-z]"), 
                       str_extract(remark_remaining_after_numbers1, "[0-9]+"), NA_character_),
    remark_letters2 = if_else(str_detect(remark_remaining_after_letters1, "[0-9]"), 
                       str_extract(remark_remaining_after_letters1, "[A-Za-z]+"), NA_character_)
  )%>%
  mutate(
    # Extract the first group of numbers and letters
    protocols_numbers1 = str_extract(Protocols, "[0-9]+"),
    protocols_letters1 = str_extract(Protocols, "[A-Za-z]+"),
    
    # Remove the first set of numbers or letters to check for the second set
    protocols_remaining_after_numbers1 = str_remove(Protocols, "([0-9]+)"),
    protocols_remaining_after_letters1 = str_remove(Protocols, "([A-Za-z]+)"),
    
    # Extract the second set of numbers or letters
    protocols_numbers2 = if_else(str_detect(protocols_remaining_after_numbers1, "[A-Za-z]"), 
                       str_extract(protocols_remaining_after_numbers1, "[0-9]+"), NA_character_),
    protocols_letters2 = if_else(str_detect(protocols_remaining_after_letters1, "[0-9]"), 
                       str_extract(protocols_remaining_after_letters1, "[A-Za-z]+"), NA_character_)
  )%>%

  select(Event, Remark, Protocols,
         contains('remark'), 
         contains('protocol'), 
         everything())%>%
  select(-contains('remaining'))%>%

  mutate(
    detectRR = case_when(
    str_detect(Remark, 'RR|.RR|RR.|.RR.|RH|.RH|RH.|.RH.|ALL|.ALL|ALL.|.ALL.')~'RR', 
    TRUE~''),
    detectLR = case_when(
    str_detect(Remark, 'LR|.LR|LR.|.LR.|LH|.LH|LH.|.LH.|ALL|.ALL|ALL.|.ALL.')~'LR', 
    TRUE~''), 
    detectRF = case_when(
    str_detect(Remark, 'RF|.RF|RF.|.RF.|BF|.BF|BF.|.BF.|ALL|.ALL|ALL.|.ALL.')~'RF',
    TRUE~''),
    detectLF = case_when(
    str_detect(Remark, 'LF|.LF|LF.|.LF.|BF|.BF|BF.|.BF.|ALL|.ALL|ALL.|.ALL.')~'LF',
    TRUE~'')
    )%>%
  mutate(locate_lesion = paste0(detectRR, detectLR, detectRF, detectLF))


```

## Protocol Details

```{r}

fxn_DT_base(event_details)

```

